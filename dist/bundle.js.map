{"version":3,"file":"bundle.js","mappings":"mBAGiB,ICHV,MACH,GACA,GACA,GACA,GACA,GACA,GACA,IAAY,EACZ,IAAa,EACbA,cACIC,MAAK,IACLA,MAAK,GACT,CAEA,KACIA,MAAK,EAAeC,SAASC,eAAe,aAC5CF,MAAK,EAAYA,MAAK,EAAaG,cAAc,WACjDH,MAAK,EAAgBA,MAAK,EAAaG,cAAc,SACrDH,MAAK,EAAcA,MAAK,EAAaG,cAAc,aACnDH,MAAK,EAAgBA,MAAK,EAAaG,cAAc,gBACrDH,MAAK,EAAWA,MAAK,EAAcG,cAAc,SACrD,CACA,KACIH,MAAK,EAAUI,iBAAiB,SAAUJ,MAAK,GAC/CA,MAAK,EAAcI,iBAAiB,SAAUJ,MAAK,GACnDC,SAASG,iBAAiB,UAAWJ,MAAK,EAAWK,KAAKL,OAC1DC,SAASG,iBAAiB,QAASJ,MAAK,EAASK,KAAKL,OACtDA,MAAK,EAASI,iBAAiB,QAASJ,MAAK,EAASK,KAAKL,OAC3DA,MAAK,EAAYI,iBAAiB,YAAaJ,MAAK,EAAaK,KAAKL,OACtEC,SAASG,iBAAiB,UAAWJ,MAAK,EAAWK,KAAKL,MAE9D,CACA,GAAWM,GACP,GAAIN,MAAK,EAAW,OACpBA,MAAK,GAAa,EAClB,MAAMO,EAAQD,EAAME,OAAOC,QAAQ,YAC7BC,IAAaH,GAAOI,UAAUC,SAAS,UACvCC,EAAMN,GAAOO,QAAQD,IACvBH,GAAcG,GAAe,UAARA,GAA2B,cAARA,IACxCb,MAAK,EAASe,OAASF,GAEvBH,GAAoB,UAARG,IACZb,MAAK,EAASe,OAAS,KAEvBL,GAAoB,cAARG,IACZb,MAAK,EAASe,MAAQf,MAAK,EAASe,MAAMC,MAAM,GAAI,IAExDhB,MAAK,EAAYG,cAAc,YAAYQ,UAAUM,OAAO,SAEhE,CACA,GAAaX,GACLN,MAAK,IACTA,MAAK,GAAa,EAClBM,EAAME,OAAOC,QAAQ,aAAaE,UAAUO,IAAI,UACpD,CAEA,GAASZ,GACLN,MAAK,EAAcW,UAAUQ,OAAO,QAAS,gBAAgBC,KAAKd,EAAME,OAAOO,QAC/Ef,MAAK,EAASe,MAAQT,EAAME,OAAOO,MAAMM,QAAQ,gBAAiB,GACtE,CACA,GAAWf,GACHN,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EAAYG,cAAc,cAAcG,EAAMgB,UAAUX,UAAUO,IAAI,UAC/E,CACA,GAASZ,GACDN,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EAAYG,cAAc,cAAcG,EAAMgB,UAAUX,UAAUM,OAAO,UAClF,CAEA,GAAeX,GACXL,SAASsB,gBAAgBC,aAAa,QAASlB,EAAME,OAAOiB,QAAU,YAAc,GACxF,CACA,GAAcnB,GACVL,SAASyB,KAAKC,MAAMC,WAAatB,EAAME,OAAOO,KAClD,E","sources":["webpack://virtual-keyboard/./src/js/index.js","webpack://virtual-keyboard/./src/js/keyboard.js"],"sourcesContent":["import \"../css/style.css\";\nimport { Keyboard } from \"./keyboard\";\n\nconst keyboard = new Keyboard();\n","export class Keyboard {\n    #switchEl;\n    #fontSelectEl;\n    #containerEl;\n    #keyboardEl;\n    #inputGroupEl;\n    #inputEl;\n    #keyPress = false;\n    #mouseDown = false;\n    constructor() {\n        this.#assignElement();\n        this.#addEvent();\n    }\n\n    #assignElement() {\n        this.#containerEl = document.getElementById(\"container\");\n        this.#switchEl = this.#containerEl.querySelector(\"#switch\")\n        this.#fontSelectEl = this.#containerEl.querySelector(\"#font\")\n        this.#keyboardEl = this.#containerEl.querySelector(\"#keyboard\");\n        this.#inputGroupEl = this.#containerEl.querySelector(\"#input-group\");\n        this.#inputEl = this.#inputGroupEl.querySelector(\"#input\")\n    }\n    #addEvent() {\n        this.#switchEl.addEventListener(\"change\", this.#onChangeTheme);\n        this.#fontSelectEl.addEventListener(\"change\", this.#onChangeFont)\n        document.addEventListener(\"keydown\", this.#onKeyDown.bind(this))\n        document.addEventListener(\"keyup\", this.#onKeyUp.bind(this))\n        this.#inputEl.addEventListener(\"input\", this.#onInput.bind(this))\n        this.#keyboardEl.addEventListener(\"mousedown\", this.#onMouseDown.bind(this))\n        document.addEventListener(\"mouseup\", this.#onMouseUp.bind(this))\n\n    }\n    #onMouseUp(event) {\n        if (this.#keyPress) return;\n        this.#mouseDown = false;\n        const keyEl = event.target.closest(\"div .key\");\n        const isActive = !!keyEl?.classList.contains(\"active\");\n        const val = keyEl?.dataset.val;\n        if (isActive && !!val && val !== \"Space\" && val !== \"Backspace\") {\n            this.#inputEl.value += val;\n        }\n        if (isActive && val === \"Space\") {\n            this.#inputEl.value += \" \";\n        }\n        if (isActive && val === \"Backspace\") {\n            this.#inputEl.value = this.#inputEl.value.slice(0, -1);\n        }\n        this.#keyboardEl.querySelector(\".active\")?.classList.remove(\"active\");\n\n    }\n    #onMouseDown(event) {\n        if (this.#keyPress) return;\n        this.#mouseDown = true\n        event.target.closest(\"div .key\")?.classList.add(\"active\")\n    }\n\n    #onInput(event) {\n        this.#inputGroupEl.classList.toggle(\"error\", /[亜-熙｜ぁ-ん｜ァ-ヶ]/.test(event.target.value))\n        this.#inputEl.value = event.target.value.replace(/[亜-熙｜ぁ-ん｜ァ-ヶ]/, \"\")\n    }\n    #onKeyDown(event) {\n        if (this.#mouseDown) return;\n        this.#keyPress = true\n        this.#keyboardEl.querySelector(`[data-code=${event.code}]`)?.classList.add(\"active\");\n    }\n    #onKeyUp(event) {\n        if (this.#mouseDown) return;\n        this.#keyPress = false\n        this.#keyboardEl.querySelector(`[data-code=${event.code}]`)?.classList.remove(\"active\");\n    }\n\n    #onChangeTheme(event) {\n        document.documentElement.setAttribute(\"theme\", event.target.checked ? \"dark-mode\" : \"\")\n    }\n    #onChangeFont(event) {\n        document.body.style.fontFamily = event.target.value;\n    }\n}\n"],"names":["constructor","this","document","getElementById","querySelector","addEventListener","bind","event","keyEl","target","closest","isActive","classList","contains","val","dataset","value","slice","remove","add","toggle","test","replace","code","documentElement","setAttribute","checked","body","style","fontFamily"],"sourceRoot":""}